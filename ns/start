#!/bin/bash

function die {
  echo "ERROR: ${1}"
  exit 1
}

function check_needed_variables {
  echo -n "Checking for needed variables..."
  [[ -> ${DOMAIN} ]] && die "No DOMAIN specified"
  [[ -> ${FWD_NS1} ]] && die "No FWD_NS1 specified"
  [[ -> ${FWD_NS2} ]] && die "No FWD_NS2 specified"
  echo -n "done"
  echo
}

function setup {
    keyfile=/var/named/${DOMAIN}.key
    cd /var/named
    dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom ${DOMAIN}
    KEY="$(grep Key: K${DOMAIN}*.private | cut -d ' ' -f 2)"
    rndc-confgen -a -r /dev/urandom

    echo "forwarders { ${FWD_NS1}; ${FWD_NS2}; } ;" >> /var/named/forwarders.conf

    rm -rvf /var/named/dynamic
    mkdir -vp /var/named/dynamic

cat << EOF > /var/named/dynamic/${DOMAIN}.db
    \$ORIGIN .
    \$TTL 1 ; 1 seconds (for testing only)
    ${DOMAIN}       IN SOA  ns1.${DOMAIN}. hostmaster.${DOMAIN}. (
            2011112904 ; serial
            60         ; refresh (1 minute)
            15         ; retry (15 seconds)
            1800       ; expire (30 minutes)
            10         ; minimum (10 seconds)
            )
        NS  ns1.${DOMAIN}.
    \$ORIGIN ${DOMAIN}.
    ns1         A   127.0.0.1
EOF

cat << EOF > /var/named/${DOMAIN}.key
    key ${DOMAIN} {
      algorithm HMAC-MD5;
      secret "${KEY}";
    };
EOF

cat << EOF > /etc/named.conf
    options {
        listen-on port 53 { any; };
        directory   "/var/named";
        dump-file   "/var/named/data/cache_dump.db";
            statistics-file "/var/named/data/named_stats.txt";
            memstatistics-file "/var/named/data/named_mem_stats.txt";
        allow-query     { any; };
        recursion yes;
    
        bindkeys-file "/etc/named.iscdlv.key";
    
        // set forwarding to the next nearest server (from DHCP response
        forward only;
        include "forwarders.conf";
    };
    
    logging {
            channel default_debug {
                    file "data/named.run";
                    severity dynamic;
            };
    };
    
    include "/etc/rndc.key";
    
    controls {
        inet 127.0.0.1 port 953
        allow { 127.0.0.1; } keys { "rndc-key"; };
    };
    include "/etc/named.rfc1912.zones";
    
    include "${DOMAIN}.key";
    zone "${DOMAIN}" IN {
        type master;
        file "dynamic/${DOMAIN}.db";
        allow-update { key ${DOMAIN} ; } ;
    };
EOF

}

check_needed_variables
setup

case ${1} in
  start)
    echo "starting service"
    /usr/sbin/named -u bind -g
    ;;
  *)
    ${1}
    ;;
esac
